.\" -*- nroff -*-
.\"
.TH UMAD_GET_PORT 3  "2007-03-12" "OpenIB" "OpenIB Programmer's Manual"
.SH "NAME"
umad_get_port, umad_release_port \- open and close context to InfiniBand device port
.SH "SYNOPSIS"
.nf
.B #include <infiniband/umad.h>
.sp
.BI "int umad_get_port(char " "*ca_name" ", int " "portnum" ", umad_port_t " "*port" );
.nl
.BI "int umad_release_port(umad_port_t " "*port" );
.fi
.SH "DESCRIPTION"
.B umad_get_port()
open a context and get the attributes of the IB port number
.I portnum
of the device
.I ca_name\fR.
The argument
.I port
is an umad_port_t struct, as specified in <infiniband/umad.h>.
.PP
.nf
typedef struct umad_port {
.in +8
char ca_name[UMAD_CA_NAME_LEN];                 /* Name of the device */
int portnum;                                    /* Physical port number */
uint base_lid;                                  /* Base port LID */
uint lmc;                                       /* LMC of LID */
uint sm_lid;                                    /* SM LID */
uint sm_sl;                                     /* SM service level */
uint state;                                     /* Logical port state */
uint phys_state;                                /* Physical port state */
uint rate;                                      /* Port link bit rate */
uint64_t capmask;                               /* Port capabilities */
uint64_t gid_prefix;                            /* Gid prefix of this port */
uint64_t port_guid;                             /* GUID of this port */
.in -8
} umad_port_t;
.fi
.PP
.B umad_release_port()
release the context and the resources that were allocated in the function
.B umad_get_port()
for the IB port
.I port\fR.
.SH "RETURN VALUE"
.B umad_get_port()
and
.B umad_release_port()
returns 0 on success, and a negative value on error.
.SH "SEE ALSO"
.BR umad_init (3),
.BR umad_get_ca_portguids (3),
.BR umad_get_ca (3)
.SH "AUTHORS"
.TP
Dotan Barak <dotanb@mellanox.co.il>
