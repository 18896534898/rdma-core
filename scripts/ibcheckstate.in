#!/bin/sh

IBPATH=${IBPATH:-@IBSCRIPTPATH@}

function usage() {
	echo Usage: `basename $0` [-h] [-v] [-N \| -nocolor] [\<topology-file\>]
	exit -1
}

function user_abort() {
	echo "Aborted"
	exit 1
}

trap user_abort SIGINT

gflags=""
verbose=""
v=0
ntype=""
nodeguid=""
oldlid=""

while [ "$1" ]; do
	case $1 in
	-h)
		usage
		;;
	-N|-nocolor)
		gflags=-N
		;;
	-v)
		verbose=-v
		v=1
		;;
	-*)
		usage
		;;
	*)
		break
		;;
	esac
	shift
done

if [ "$1" ]; then
	netcmd="cat $1"
else
	netcmd="$IBPATH/ibnetdiscover"
fi

eval $netcmd | awk '
BEGIN {
	ne=0
	pe=0
}
function check_node(lid)
{
	nodechecked=1
	if (system("'$IBPATH'/ibchecknode '$gflags' '$verbose' " lid)) {
		ne++
		badnode=1
		return
	}
}

/^Ca/ || /^Switch/ || /^Rt/ {
			nnodes++
			ntype=$1; nodeguid=substr($3, 4, 16); ports=$2
			if ('$v')
				print "\n# Checking " ntype ": nodeguid 0x" nodeguid

			nodechecked=0
			badnode=0
			if (ntype != "Switch")
				next

			lid = substr($0, index($0, "port 0 lid ") + 11)
			lid = substr(lid, 1, index(lid, " ") - 1)
			check_node(lid)
		}
/^\[/	{
		nports++
		port = $1
		if (!nodechecked) {
			lid = substr($0, index($0, " lid ") + 5)
			lid = substr(lid, 1, index(lid, " ") - 1)
			check_node(lid)
		}
		if (badnode) {
			print "\n# " ntype ": nodeguid 0x" nodeguid " failed"
			next
		}
		sub("\\(.*\\)", "", port)
		gsub("[\\[\\]]", "", port)
		if (system("'$IBPATH'/ibcheckportstate '$gflags' '$verbose' " lid " " port)) {
			if (!'$v' && oldlid != lid) {
				print "# Checked " ntype ": nodeguid 0x" nodeguid " with failure"
				oldlid = lid
			}
			pe++;
		}
}

END {
	printf "\n## Summary: %d nodes checked, %d bad nodes found\n", nnodes, ne
	printf "##          %d ports checked, %d ports with bad state found\n", nports, pe
}
'
